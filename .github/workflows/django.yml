name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  PROJECT_NAME: portfolio_with_django
  BUCKET_NAME: django-github-action
  CODE_DEPLOY_APP_NAME: django_github_action
  DEPLOYMENT_GROUP_NAME: github_action
  
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest # 실행될 인스턴스 OS와 버전

    steps:
      - name: excuting remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_IP }} # 인스턴스 IP
          username: ${{ secrets.REMOTE_USER }} # 우분투 아이디
          key: ${{ secrets.REMOTE_PRIVATE_KEY }} # ec2 instance pem key
          port: ${{ secrets.REMOTE_SSH_PORT }} # 접속포트
          script: | # 실행할 스크립트
            cd /srv/portfolio_with_django/
            pkill -f "python3 manage.py runserver"
            git reset --hard
            git pull
            nohup python3 manage.py runserver 0:8443 --insecure &
  # build:

  #   runs-on: ubuntu-22.04
  #   strategy:
  #     max-parallel: 4
  #     matrix:
  #       python-version: [3.11]

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install Dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt
  #   - name: Run Tests
  #     run: |
  #       python manage.py test

        
    # - name: Make Zip File
    #   run: zip -qq -r ./$GITHUB_SHA.zip .
    #   shell: bash
        
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
    #     aws-region: ap-northeast-2
      
    # - name: Upload to S3
    #   run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

    # - name: Code Deploy To EC2 instance
    #   run: aws deploy create-deployment 
    #           --application-name $CODE_DEPLOY_APP_NAME 
    #           --deployment-config-name CodeDeployDefault.AllAtOnce
    #           --deployment-group-name $DEPLOYMENT_GROUP_NAME 
    #           --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
